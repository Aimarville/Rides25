name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout del código fuente
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necesario para análisis completo en SonarCloud

      # ✅ Configurar JDK 17 (usando Azul Zulu)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          cache: 'maven'

      # ✅ Cache de SonarQube para acelerar análisis
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar

      # ✅ Cache de dependencias Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # ✅ Detectar nombre de rama actual
      - name: Set branch name
        run: echo "GITHUB_REF_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      # ✅ Compilar proyecto + generar cobertura con Jacoco
      - name: Build with Jacoco
        run: |
          mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install \
            org.jacoco:jacoco-maven-plugin:report

      # ✅ Análisis con SonarCloud (rama main corregida + formato multilínea)
      - name: SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.branch.name=$GITHUB_REF_NAME \
            -Dsonar.branch.target=main \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }}

      # ✅ (Opcional) Validar éxito del análisis SonarCloud
      - name: Check SonarCloud Status
        if: ${{ success() }}
        run: echo "✅ Análisis completado correctamente en SonarCloud."
